// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db_static_data

import (
	"time"
)

type Abyss struct {
	ID                 int32     `json:"id"`
	EnumID             string    `json:"enum_id"`
	Level              int32     `json:"level"`
	MapFile            string    `json:"map_file"`
	Size               string    `json:"size"`
	SizeX              int32     `json:"size_x"`
	SizeY              int32     `json:"size_y"`
	Rule               string    `json:"rule"`
	AbyssTitleResource string    `json:"abyss_title_resource"`
	Boss               string    `json:"boss"`
	Minor              string    `json:"minor"`
	Elite              string    `json:"elite"`
	Tower              string    `json:"tower"`
	TimeLimit          float64   `json:"time_limit"`
	CreatedAt          time.Time `json:"created_at"`
}

type AbyssPool struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Abyss     string    `json:"abyss"`
	CreatedAt time.Time `json:"created_at"`
}

type AccountGrowth struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Level     int32     `json:"level"`
	Exp       int32     `json:"exp"`
	ExpPlus   int32     `json:"exp_plus"`
	CreatedAt time.Time `json:"created_at"`
}

type AiDeck struct {
	ID             int32     `json:"id"`
	EnumID         string    `json:"enum_id"`
	AiFile         string    `json:"ai_file"`
	AiMatchScore   int32     `json:"ai_match_score"`
	Nickname       string    `json:"nickname"`
	DeckSlot       string    `json:"deck_slot"`
	CharacterLevel string    `json:"character_level"`
	CreatedAt      time.Time `json:"created_at"`
}

type AiPlayer struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Nickname  string    `json:"nickname"`
	Deck      string    `json:"deck"`
	CreatedAt time.Time `json:"created_at"`
}

type AiPool struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Ai        string    `json:"ai"`
	CreatedAt time.Time `json:"created_at"`
}

type Asset struct {
	ID                     int32     `json:"id"`
	EnumID                 string    `json:"enum_id"`
	CeAsset                string    `json:"ce_asset"`
	CeAssetGrade           string    `json:"ce_asset_grade"`
	GradeResourceThumbnail string    `json:"grade_resource_thumbnail"`
	GradeResource          string    `json:"grade_resource"`
	ImageReference         string    `json:"image_reference"`
	PictogramReference     string    `json:"pictogram_reference"`
	GradeReference         string    `json:"grade_reference"`
	ImageTile              string    `json:"image_tile"`
	CreatedAt              time.Time `json:"created_at"`
}

type Balance struct {
	ID          int32     `json:"id"`
	EnumID      string    `json:"enum_id"`
	ContentType string    `json:"content_type"`
	FailValue   float64   `json:"fail_value"`
	Balance     string    `json:"balance"`
	Rate        string    `json:"rate"`
	MinValue    string    `json:"min_value"`
	MaxValue    string    `json:"max_value"`
	CreatedAt   time.Time `json:"created_at"`
}

type Character struct {
	ID                  int32     `json:"id"`
	EnumID              string    `json:"enum_id"`
	CharacterRoot       string    `json:"character_root"`
	CeCharacterSpecies  string    `json:"ce_character_species"`
	Crew                string    `json:"crew"`
	CeCharacterClass    string    `json:"ce_character_class"`
	CeCharacterProperty string    `json:"ce_character_property"`
	Mbti                string    `json:"mbti"`
	Hobby               string    `json:"hobby"`
	Partner             bool      `json:"partner"`
	CeCharacterGrade    string    `json:"ce_character_grade"`
	BaseStat            string    `json:"base_stat"`
	LevelStat           string    `json:"level_stat"`
	ResourceList        string    `json:"resource_list"`
	SkillSet            string    `json:"skill_set"`
	ItemPreference      string    `json:"item_preference"`
	SignatureWeapon     string    `json:"signature_weapon"`
	CostumeBundle       string    `json:"costume_bundle"`
	SecondName          string    `json:"second_name"`
	Library             bool      `json:"library"`
	Profile             string    `json:"profile"`
	UnitSize            float64   `json:"unit_size"`
	Basic               string    `json:"basic"`
	Active              string    `json:"active"`
	CreatedAt           time.Time `json:"created_at"`
}

type CharacterBaseStat struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	BaseStat  string    `json:"base_stat"`
	CreatedAt time.Time `json:"created_at"`
}

type CharacterCostumeBundle struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Costume   string    `json:"costume"`
	CreatedAt time.Time `json:"created_at"`
}

type CharacterGetDialogue struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	CharacterEnumID string    `json:"character_enum_id"`
	Animation       string    `json:"animation"`
	DayDialogue     string    `json:"day_dialogue"`
	NightDialogue   string    `json:"night_dialogue"`
	DayVoice        string    `json:"day_voice"`
	NightVoice      string    `json:"night_voice"`
	CreatedAt       time.Time `json:"created_at"`
}

type CharacterGrowth struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Level     int32     `json:"level"`
	Exp       int32     `json:"exp"`
	ExpPlus   int32     `json:"exp_plus"`
	CreatedAt time.Time `json:"created_at"`
}

type CharacterLevelStat struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	LevelStat string    `json:"level_stat"`
	CreatedAt time.Time `json:"created_at"`
}

type CharacterResource struct {
	ID                       int32     `json:"id"`
	EnumID                   string    `json:"enum_id"`
	Spine                    string    `json:"spine"`
	EffLanding               string    `json:"eff_landing"`
	CharacterWeapon          string    `json:"character_weapon"`
	PhoneCaseClose           string    `json:"phone_case_close"`
	PhoneCaseOpen            string    `json:"phone_case_open"`
	DayLdReference           string    `json:"day_ld_reference"`
	NightLdReference         string    `json:"night_ld_reference"`
	NightSdReference         string    `json:"night_sd_reference"`
	PortraitNightReference   string    `json:"portrait_night_reference"`
	PortraitDaytimeReference string    `json:"portrait_daytime_reference"`
	ThumbnailReference       string    `json:"thumbnail_reference"`
	ThumbnailSdReference     string    `json:"thumbnail_sd_reference"`
	BackgroundReference      string    `json:"background_reference"`
	CardReference            string    `json:"card_reference"`
	VoiceSkill               string    `json:"voice_skill"`
	CreatedAt                time.Time `json:"created_at"`
}

type CharacterTypeResource struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	CommonEnumValue string    `json:"common_enum_value"`
	ImageRef        string    `json:"image_ref"`
	CreatedAt       time.Time `json:"created_at"`
}

type Characterskillset struct {
	ID          int32     `json:"id"`
	EnumID      string    `json:"enum_id"`
	Skill       string    `json:"skill"`
	CeSkillType string    `json:"ce_skill_type"`
	CreatedAt   time.Time `json:"created_at"`
}

type Comment struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	CommentWriter    string    `json:"comment_writer"`
	CommentContents  string    `json:"comment_contents"`
	CommentReference string    `json:"comment_reference"`
	CommentLike      string    `json:"comment_like"`
	CreatedAt        time.Time `json:"created_at"`
}

type Costume struct {
	ID                 int32     `json:"id"`
	EnumID             string    `json:"enum_id"`
	SkinName           string    `json:"skin_name"`
	Character          string    `json:"character"`
	CeCostumeCondition string    `json:"ce_costume_condition"`
	ConditionValue     string    `json:"condition_value"`
	IllustReference    string    `json:"illust_reference"`
	PortraitReference  string    `json:"portrait_reference"`
	VoiceAppear        string    `json:"voice_appear"`
	CreatedAt          time.Time `json:"created_at"`
}

type Crew struct {
	ID                      int32     `json:"id"`
	EnumID                  string    `json:"enum_id"`
	CrewIntroduction        string    `json:"crew_introduction"`
	CrewReference           string    `json:"crew_reference"`
	CrewEmptyReference      string    `json:"crew_empty_reference"`
	CrewGroupPhotoReference string    `json:"crew_group_photo_reference"`
	CrewMember              string    `json:"crew_member"`
	CreatedAt               time.Time `json:"created_at"`
}

type Dialogue struct {
	ID          int32     `json:"id"`
	EnumID      string    `json:"enum_id"`
	DialogueID  string    `json:"dialogue_id"`
	Name        string    `json:"name"`
	Number      int32     `json:"number"`
	Spotlight   int32     `json:"spotlight"`
	Character   string    `json:"character"`
	Animation   string    `json:"animation"`
	Highlighter int32     `json:"highlighter"`
	CreatedAt   time.Time `json:"created_at"`
}

type DonationContents struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	ImageReference  string    `json:"image_reference"`
	SponserNickname string    `json:"sponser_nickname"`
	CeCommonType    string    `json:"ce_common_type"`
	Item            string    `json:"item"`
	ItemValue       int32     `json:"item_value"`
	SystemMessage   string    `json:"system_message"`
	Sound           string    `json:"sound"`
	Voice           string    `json:"voice"`
	Animation       string    `json:"animation"`
	CreatedAt       time.Time `json:"created_at"`
}

type DonationMessage struct {
	ID                int32     `json:"id"`
	EnumID            string    `json:"enum_id"`
	SponserEnum       string    `json:"sponser_enum"`
	CeDonationTrigger string    `json:"ce_donation_trigger"`
	Content           string    `json:"content"`
	CreatedAt         time.Time `json:"created_at"`
}

type DonationSponser struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	CharacterEnum string    `json:"character_enum"`
	Sponser       string    `json:"sponser"`
	CreatedAt     time.Time `json:"created_at"`
}

type DonationTrigger struct {
	ID                int32     `json:"id"`
	EnumID            string    `json:"enum_id"`
	CeDonationTrigger string    `json:"ce_donation_trigger"`
	Rate              float64   `json:"rate"`
	Delay             float64   `json:"delay"`
	CeStreamer        string    `json:"ce_streamer"`
	BonusTrigger      string    `json:"bonus_trigger"`
	BonusRatePlus     string    `json:"bonus_rate_plus"`
	CreatedAt         time.Time `json:"created_at"`
}

type Drop struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	ContentType      string    `json:"content_type"`
	CeCommonTypeDrop string    `json:"ce_common_type_drop"`
	Icon             string    `json:"icon"`
	Drop             string    `json:"drop"`
	Rate             string    `json:"rate"`
	Value            string    `json:"value"`
	DropNext         string    `json:"drop_next"`
	CreatedAt        time.Time `json:"created_at"`
}

type Emoticon struct {
	ID                     int32     `json:"id"`
	EnumID                 string    `json:"enum_id"`
	EmoticonClearReference string    `json:"emoticon_clear_reference"`
	EmoticonWhiteReference string    `json:"emoticon_white_reference"`
	CreatedAt              time.Time `json:"created_at"`
}

type FateCard struct {
	ID                   int32     `json:"id"`
	EnumID               string    `json:"enum_id"`
	CeFateCardGrade      string    `json:"ce_fate_card_grade"`
	CardTrigger          string    `json:"card_trigger"`
	CardEffect           string    `json:"card_effect"`
	CardEffectValue      string    `json:"card_effect_value"`
	CardEffectDuration   string    `json:"card_effect_duration"`
	MainGradeReference   string    `json:"main_grade_reference"`
	SlotGradeReference   string    `json:"slot_grade_reference"`
	IconReference        string    `json:"icon_reference"`
	RewardGradeReference string    `json:"reward_grade_reference"`
	ImageReference       string    `json:"image_reference"`
	Recipe               string    `json:"recipe"`
	EffectReference      string    `json:"effect_reference"`
	CreatedAt            time.Time `json:"created_at"`
}

type Gacha struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	GachaClass    string    `json:"gacha_class"`
	GachaResource string    `json:"gacha_resource"`
	SlotImage     string    `json:"slot_image"`
	CharacterShow string    `json:"character_show"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaClass struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Prob      string    `json:"prob"`
	PoolGroup string    `json:"pool_group"`
	CreatedAt time.Time `json:"created_at"`
}

type GachaDropA struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	DropCharacter string    `json:"drop_character"`
	PoolID        string    `json:"pool_id"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaDropB struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	DropCharacter string    `json:"drop_character"`
	PoolID        string    `json:"pool_id"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaDropC struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	DropCharacter string    `json:"drop_character"`
	PoolID        string    `json:"pool_id"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaDropD struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	DropCharacter string    `json:"drop_character"`
	PoolID        string    `json:"pool_id"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaLocal struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}

type GachaPoolGroup struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	PoolCondition string    `json:"pool_condition"`
	PoolID        string    `json:"pool_id"`
	PoolIDRate    string    `json:"pool_id_rate"`
	CreatedAt     time.Time `json:"created_at"`
}

type GachaResource struct {
	ID           int32     `json:"id"`
	EnumID       string    `json:"enum_id"`
	NameColor    string    `json:"name_color"`
	BoxReference string    `json:"box_reference"`
	CreatedAt    time.Time `json:"created_at"`
}

type GachaStackModel struct {
	ID                   int32     `json:"id"`
	EnumID               string    `json:"enum_id"`
	AProbCorrection      float64   `json:"a_prob_correction"`
	StackCorrectionStart int32     `json:"stack_correction_start"`
	StackCorrectionEnd   int32     `json:"stack_correction_end"`
	Stack100             int32     `json:"stack_100"`
	CreatedAt            time.Time `json:"created_at"`
}

type Guide struct {
	ID          int32     `json:"id"`
	EnumID      string    `json:"enum_id"`
	CeGuideType string    `json:"ce_guide_type"`
	Page        string    `json:"page"`
	CreatedAt   time.Time `json:"created_at"`
}

type GuidePage struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	GuideResourceKr string    `json:"guide_resource_kr"`
	GuideResourceEn string    `json:"guide_resource_en"`
	CreatedAt       time.Time `json:"created_at"`
}

type Item struct {
	ID                     int32     `json:"id"`
	EnumID                 string    `json:"enum_id"`
	CeItem                 string    `json:"ce_item"`
	CeItemSub              string    `json:"ce_item_sub"`
	CeItemGrade            string    `json:"ce_item_grade"`
	BundleMax              int32     `json:"bundle_max"`
	CostValue              int32     `json:"cost_value"`
	GradeResourceThumbnail string    `json:"grade_resource_thumbnail"`
	GradeImageReference    string    `json:"grade_image_reference"`
	GradeResource          string    `json:"grade_resource"`
	ImageReference         string    `json:"image_reference"`
	Value                  int32     `json:"value"`
	CreatedAt              time.Time `json:"created_at"`
}

type LibraryLocal struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}

type Localization struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}

type MapAbyss struct {
	ID        int32     `json:"id"`
	Name      string    `json:"name"`
	Data      string    `json:"data"`
	CreatedAt time.Time `json:"created_at"`
}

type Materials struct {
	ID                   int32     `json:"id"`
	EnumID               string    `json:"enum_id"`
	CeCommonTypeMaterial string    `json:"ce_common_type_material"`
	Material             string    `json:"material"`
	MaterialValue        string    `json:"material_value"`
	CreatedAt            time.Time `json:"created_at"`
}

type MentionTier1 struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	CharacterAppear string    `json:"character_appear"`
	CharacterDeadly string    `json:"character_deadly"`
	AllyKill        string    `json:"ally_kill"`
	EnemyKill       string    `json:"enemy_kill"`
	Exclusion       string    `json:"exclusion"`
	Firstblood      string    `json:"firstblood"`
	ResourceFull    string    `json:"resource_full"`
	CreatedAt       time.Time `json:"created_at"`
}

type MentionTier2 struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	CeMentionTrigger string    `json:"ce_mention_trigger"`
	CharacterAppear  string    `json:"character_appear"`
	VoiceResource    string    `json:"voice_resource"`
	CreatedAt        time.Time `json:"created_at"`
}

type MentionTrigger struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	CeMentionTrigger string    `json:"ce_mention_trigger"`
	MentionRate      float64   `json:"mention_rate"`
	MentionTier      int32     `json:"mention_tier"`
	MentionMajority  int32     `json:"mention_majority"`
	ViewableBoth     bool      `json:"viewable_both"`
	CreatedAt        time.Time `json:"created_at"`
}

type Monster struct {
	ID                  int32     `json:"id"`
	EnumID              string    `json:"enum_id"`
	Class               string    `json:"class"`
	Root                string    `json:"root"`
	CeCharacterProperty string    `json:"ce_character_property"`
	Subclass            string    `json:"subclass"`
	Tier                int32     `json:"tier"`
	Basestat            string    `json:"basestat"`
	Levelstat           string    `json:"levelstat"`
	ActiveRadius        int32     `json:"active_radius"`
	AttackRadius        int32     `json:"attack_radius"`
	SkillBasic          string    `json:"skill_basic"`
	SkillActive         string    `json:"skill_active"`
	Resource            string    `json:"resource"`
	UnitSize            float64   `json:"unit_size"`
	IdleAni             string    `json:"idle_ani"`
	RunAni              string    `json:"run_ani"`
	HurtAni             string    `json:"hurt_ani"`
	DieAni              string    `json:"die_ani"`
	ReviveAni           string    `json:"revive_ani"`
	DestructionAni      string    `json:"destruction_ani"`
	CreatedAt           time.Time `json:"created_at"`
}

type MonsterPool struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Monster   string    `json:"monster"`
	Weight    string    `json:"weight"`
	CreatedAt time.Time `json:"created_at"`
}

type Profile struct {
	ID                    int32     `json:"id"`
	EnumID                string    `json:"enum_id"`
	ProfileResource       string    `json:"profile_resource"`
	CharacterIntroduction string    `json:"character_introduction"`
	Channel               string    `json:"channel"`
	Habit                 string    `json:"habit"`
	Career                string    `json:"career"`
	Weakness              string    `json:"weakness"`
	Fandom                string    `json:"fandom"`
	DonationReaction      string    `json:"donation_reaction"`
	Crew                  string    `json:"crew"`
	DailyUnlockCondition  string    `json:"daily_unlock_condition"`
	DailyLife             string    `json:"daily_life"`
	RealName              string    `json:"real_name"`
	Gender                string    `json:"gender"`
	RealJob               string    `json:"real_job"`
	Height                string    `json:"height"`
	Weight                string    `json:"weight"`
	FavoriteThing         string    `json:"favorite_thing"`
	DislikeThing          string    `json:"dislike_thing"`
	Personality           string    `json:"personality"`
	Relationships         string    `json:"relationships"`
	Comment               string    `json:"comment"`
	Viewers               int32     `json:"viewers"`
	Illustrator           string    `json:"illustrator"`
	CreatedAt             time.Time `json:"created_at"`
}

type ProfileResource struct {
	ID                        int32     `json:"id"`
	EnumID                    string    `json:"enum_id"`
	LibraryThumbnailReference string    `json:"library_thumbnail_reference"`
	LibraryBgReference        string    `json:"library_bg_reference"`
	FaceImageReference        string    `json:"face_image_reference"`
	BannerImageReference      string    `json:"banner_image_reference"`
	OnAirIllustReference      string    `json:"on_air_illust_reference"`
	OfflineIllustReference    string    `json:"offline_illust_reference"`
	ColorCode                 string    `json:"color_code"`
	CreatedAt                 time.Time `json:"created_at"`
}

type Recipe struct {
	ID                 int32     `json:"id"`
	EnumID             string    `json:"enum_id"`
	CeCommonTypeResult string    `json:"ce_common_type_result"`
	CeCraftCategory    string    `json:"ce_craft_category"`
	Result             string    `json:"result"`
	RecipeMaterial     string    `json:"recipe_material"`
	CreatedAt          time.Time `json:"created_at"`
}

type Relationships struct {
	ID             int32     `json:"id"`
	EnumID         string    `json:"enum_id"`
	Friend         string    `json:"friend"`
	FriendNickname string    `json:"friend_nickname"`
	CreatedAt      time.Time `json:"created_at"`
}

type Rule struct {
	ID                         int32     `json:"id"`
	EnumID                     string    `json:"enum_id"`
	WinCondition               string    `json:"win_condition"`
	EliteSpawnPeriod           float64   `json:"elite_spawn_period"`
	EliteSpawnLimit            int32     `json:"elite_spawn_limit"`
	MinorTileGenerateStart     int32     `json:"minor_tile_generate_start"`
	MinorTileGenerateMax       int32     `json:"minor_tile_generate_max"`
	MinorTileAddgenTime        float64   `json:"minor_tile_addgen_time"`
	MinorSpawnLimitPerTile     int32     `json:"minor_spawn_limit_per_tile"`
	MinorStepDivision          int32     `json:"minor_step_division"`
	MinorSpawnPeriod           float64   `json:"minor_spawn_period"`
	EnhanceSpawnPeriod         float64   `json:"enhance_spawn_period"`
	EnhanceRate                float64   `json:"enhance_rate"`
	EnhancePeriod              float64   `json:"enhance_period"`
	EnhanceMultiplier          float64   `json:"enhance_multiplier"`
	PlayersEnhanceTiles        int32     `json:"players_enhance_tiles"`
	PlayerEnhanceTilesInitial  int32     `json:"player_enhance_tiles_initial"`
	NeutralEnhanceTiles        int32     `json:"neutral_enhance_tiles"`
	NeutralEnhanceTilesInitial int32     `json:"neutral_enhance_tiles_initial"`
	BossSpawnPeriod            float64   `json:"boss_spawn_period"`
	InitialBossSpawn           float64   `json:"initial_boss_spawn"`
	CharaRadius                int32     `json:"chara_radius"`
	CharaRespawnLimit          int32     `json:"chara_respawn_limit"`
	CreatedAt                  time.Time `json:"created_at"`
}

type SignatureWeapon struct {
	ID                    int32     `json:"id"`
	EnumID                string    `json:"enum_id"`
	BaseAtk               int32     `json:"base_atk"`
	BaseDef               int32     `json:"base_def"`
	BaseHp                int32     `json:"base_hp"`
	CeWeaponProperty      string    `json:"ce_weapon_property"`
	BaseProperty          int32     `json:"base_property"`
	WeaponSkill           string    `json:"weapon_skill"`
	WeaponGrowthMaterials string    `json:"weapon_growth_materials"`
	WeaponLevelStat       string    `json:"weapon_level_stat"`
	WeaponReference       string    `json:"weapon_reference"`
	CreatedAt             time.Time `json:"created_at"`
}

type SkillData struct {
	ID                 int32     `json:"id"`
	EnumID             string    `json:"enum_id"`
	SkillType          string    `json:"skill_type"`
	SkillSubtype       string    `json:"skill_subtype"`
	TargetType         string    `json:"target_type"`
	ObjectType         string    `json:"object_type"`
	HitRadius          int32     `json:"hit_radius"`
	HitCenter          string    `json:"hit_center"`
	Animation          string    `json:"animation"`
	FragmentCost       int32     `json:"fragment_cost"`
	SkillValue         float64   `json:"skill_value"`
	Range              int32     `json:"range"`
	Duration           float64   `json:"duration"`
	Cooldown           float64   `json:"cooldown"`
	ResourceDelay      float64   `json:"resource_delay"`
	SkillResource      string    `json:"skill_resource"`
	ProjectileResource string    `json:"projectile_resource"`
	HitResource        string    `json:"hit_resource"`
	HitDelay           float64   `json:"hit_delay"`
	Child              string    `json:"child"`
	Lag                float64   `json:"lag"`
	CausedEffect       string    `json:"caused_effect"`
	ProjectileSpeed    float64   `json:"projectile_speed"`
	Icon               string    `json:"icon"`
	CreatedAt          time.Time `json:"created_at"`
}

type Skilleffectproperties struct {
	ID              string    `json:"id"`
	EnumID          string    `json:"enum_id"`
	Coefficient     float64   `json:"coefficient"`
	NeuCoefficient  float64   `json:"neu_coefficient"`
	StaggerValue    float64   `json:"stagger_value"`
	Unavoidable     int32     `json:"unavoidable"`
	Unblockable     int32     `json:"unblockable"`
	Perstack        int32     `json:"perstack"`
	Grade           float64   `json:"grade"`
	Constvalue      float64   `json:"constvalue"`
	Percentagevalue float64   `json:"percentagevalue"`
	Duration        float64   `json:"duration"`
	DurIndependence int32     `json:"dur_independence"`
	DurPerstack     float64   `json:"dur_perstack"`
	CeEnableCond    string    `json:"ce_enable_cond"`
	CondVar         float64   `json:"cond_var"`
	ApplyTrigger    string    `json:"apply_trigger"`
	Frequency       float64   `json:"frequency"`
	Maxstack        int32     `json:"maxstack"`
	CreatedAt       time.Time `json:"created_at"`
}

type Skilleffects struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	CeEffectCategory string    `json:"ce_effect_category"`
	IconReference    string    `json:"icon_reference"`
	Leveladjust      string    `json:"leveladjust"`
	Resource         string    `json:"resource"`
	CeRemoveCond     string    `json:"ce_remove_cond"`
	Lasts            int32     `json:"lasts"`
	CeEnableCond     string    `json:"ce_enable_cond"`
	Bind             int32     `json:"bind"`
	ProhAttack       int32     `json:"proh_attack"`
	ProhSkills       int32     `json:"proh_skills"`
	Invincibility    int32     `json:"invincibility"`
	CeStat           string    `json:"ce_stat"`
	CeStatAffected   string    `json:"ce_stat_affected"`
	CeStatSubtype    string    `json:"ce_stat_subtype"`
	CeAffectType     string    `json:"ce_affect_type"`
	CreatedAt        time.Time `json:"created_at"`
}

type Skillelements struct {
	ID           string    `json:"id"`
	EnumID       string    `json:"enum_id"`
	Radius       string    `json:"radius"`
	RadiusCenter string    `json:"radius_center"`
	CeTarget     string    `json:"ce_target"`
	Effect       string    `json:"effect"`
	Resource     string    `json:"resource"`
	Property     string    `json:"property"`
	CreatedAt    time.Time `json:"created_at"`
}

type Skilllocalization struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}

type Skillpreset struct {
	ID                int32     `json:"id"`
	EnumID            string    `json:"enum_id"`
	CeSkillSubtype    string    `json:"ce_skill_subtype"`
	IconReference     string    `json:"icon_reference"`
	Animation         string    `json:"animation"`
	Child             string    `json:"child"`
	Target            string    `json:"target"`
	CeTargetCondition string    `json:"ce_target_condition"`
	CeOrderType       string    `json:"ce_order_type"`
	AddTarget         int32     `json:"add_target"`
	Trigger           string    `json:"trigger"`
	Range             int32     `json:"range"`
	Cd                float64   `json:"cd"`
	Startlag          float64   `json:"startlag"`
	Endlag            float64   `json:"endlag"`
	CeStat            string    `json:"ce_stat"`
	SkillValue        float64   `json:"skill_value"`
	CeCostType        string    `json:"ce_cost_type"`
	CostRequired      float64   `json:"cost_required"`
	CostConsumed      float64   `json:"cost_consumed"`
	CeEnableCond      string    `json:"ce_enable_cond"`
	CondValue         string    `json:"cond_value"`
	Element           string    `json:"element"`
	SkillResource     string    `json:"skill_resource"`
	CreatedAt         time.Time `json:"created_at"`
}

type Skillradius struct {
	ID        string    `json:"id"`
	EnumID    string    `json:"enum_id"`
	Range     string    `json:"range"`
	CreatedAt time.Time `json:"created_at"`
}

type Skilltargettype struct {
	ID            string    `json:"id"`
	EnumID        string    `json:"enum_id"`
	CeTargetStart string    `json:"ce_target_start"`
	CeTargetEnd   string    `json:"ce_target_end"`
	CeResultTime  string    `json:"ce_result_time"`
	CreatedAt     time.Time `json:"created_at"`
}

type Skilltriggers struct {
	ID               string    `json:"id"`
	EnumID           string    `json:"enum_id"`
	Value            float64   `json:"value"`
	CeSkillTrigger   string    `json:"ce_skill_trigger"`
	ActivateChance   float64   `json:"activate_chance"`
	PriorityDuration float64   `json:"priority_duration"`
	CreatedAt        time.Time `json:"created_at"`
}

type SpriteManagement struct {
	ID           int32     `json:"id"`
	EnumID       string    `json:"enum_id"`
	SpriteName   string    `json:"sprite_name"`
	AtlasAddress string    `json:"atlas_address"`
	CreatedAt    time.Time `json:"created_at"`
}

type StargemGrowth struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Level     int32     `json:"level"`
	Exp       int32     `json:"exp"`
	ExpPlus   int32     `json:"exp_plus"`
	CreatedAt time.Time `json:"created_at"`
}

type StargemResource struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Image     string    `json:"image"`
	CreatedAt time.Time `json:"created_at"`
}

type Start struct {
	ID           int32     `json:"id"`
	EnumID       string    `json:"enum_id"`
	CeCommonType string    `json:"ce_common_type"`
	RewardID     string    `json:"reward_id"`
	Value        int32     `json:"value"`
	CreatedAt    time.Time `json:"created_at"`
}

type StoryStage struct {
	ID         int32     `json:"id"`
	EnumID     string    `json:"enum_id"`
	StageIndex int32     `json:"stage_index"`
	Deck       string    `json:"deck"`
	Abyss      string    `json:"abyss"`
	Reward     string    `json:"reward"`
	CreatedAt  time.Time `json:"created_at"`
}

type StringLocal struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}

type Tier struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	IconReference   string    `json:"icon_reference"`
	RankUpNecessary int32     `json:"rank_up_necessary"`
	AiPool          string    `json:"ai_pool"`
	MapPool         string    `json:"map_pool"`
	ViewersFinalMin int32     `json:"viewers_final_min"`
	ViewersFinalMax int32     `json:"viewers_final_max"`
	WinPoint        int32     `json:"win_point"`
	WinReward       string    `json:"win_reward"`
	LosePoint       int32     `json:"lose_point"`
	LoseReward      string    `json:"lose_reward"`
	CreatedAt       time.Time `json:"created_at"`
}

type TutorialEvent struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	CeTutorialEvent string    `json:"ce_tutorial_event"`
	Group           string    `json:"group"`
	CreatedAt       time.Time `json:"created_at"`
}

type TutorialEventStep struct {
	ID                     int32     `json:"id"`
	EnumID                 string    `json:"enum_id"`
	CeRootEvent            string    `json:"ce_root_event"`
	EventStepEnum          string    `json:"event_step_enum"`
	AdvanceTrigger         string    `json:"advance_trigger"`
	TutorialGroup          string    `json:"tutorial_group"`
	CeTutorialResourceType string    `json:"ce_tutorial_resource_type"`
	Resource               string    `json:"resource"`
	ResourceOptionalString string    `json:"resource_optional_string"`
	ResourceIndex          int32     `json:"resource_index"`
	CreatedAt              time.Time `json:"created_at"`
}

type TutorialGroup struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	NextGroup     string    `json:"next_group"`
	GroupReward   string    `json:"group_reward"`
	GroupContents string    `json:"group_contents"`
	CreatedAt     time.Time `json:"created_at"`
}

type TutorialTrigger struct {
	ID                int32     `json:"id"`
	EnumID            string    `json:"enum_id"`
	CeTutorialTrigger string    `json:"ce_tutorial_trigger"`
	DialogueID        string    `json:"dialogue_id"`
	CreatedAt         time.Time `json:"created_at"`
}

type VstoryCommonProduction struct {
	ID             int32     `json:"id"`
	EnumID         string    `json:"enum_id"`
	Place          string    `json:"place"`
	PlaceSprite    string    `json:"place_sprite"`
	Donation       string    `json:"donation"`
	DonationTarget string    `json:"donation_target"`
	CreatedAt      time.Time `json:"created_at"`
}

type VstoryDialogue struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	Name             string    `json:"name"`
	Crew             string    `json:"crew"`
	Dialogue         string    `json:"dialogue"`
	CeDialogueFormat string    `json:"ce_dialogue_format"`
	Thumbnail        string    `json:"thumbnail"`
	CreatedAt        time.Time `json:"created_at"`
}

type VstoryOracleBroadcastPool struct {
	ID              int32     `json:"id"`
	EnumID          string    `json:"enum_id"`
	CharacterEnumID string    `json:"character_enum_id"`
	Event           string    `json:"event"`
	Regular         string    `json:"regular"`
	Irregular       string    `json:"irregular"`
	NoGet           string    `json:"no_get"`
	CreatedAt       time.Time `json:"created_at"`
}

type VstoryOracleChatPool struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Chat      string    `json:"chat"`
	CreatedAt time.Time `json:"created_at"`
}

type VstoryOracleNicknamePool struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Nickname  string    `json:"nickname"`
	CreatedAt time.Time `json:"created_at"`
}

type VstoryOracleProduction struct {
	ID                   int32     `json:"id"`
	EnumID               string    `json:"enum_id"`
	Sponsorable          bool      `json:"sponsorable"`
	Place                string    `json:"place"`
	PlaceSprite          string    `json:"place_sprite"`
	Donation             string    `json:"donation"`
	OnAir                bool      `json:"on_air"`
	ChatCycleMin         float64   `json:"chat_cycle_min"`
	ChatCycleMax         float64   `json:"chat_cycle_max"`
	OracleCommonChatPool string    `json:"oracle_common_chat_pool"`
	OracleNicknamePool   string    `json:"oracle_nickname_pool"`
	SpecialChat          string    `json:"special_chat"`
	CreatedAt            time.Time `json:"created_at"`
}

type VstoryOracleSpecialChat struct {
	ID                int32     `json:"id"`
	EnumID            string    `json:"enum_id"`
	Nickname          string    `json:"nickname"`
	SpecialChat       string    `json:"special_chat"`
	SpecialChatFormat string    `json:"special_chat_format"`
	OptionalString    string    `json:"optional_string"`
	CreatedAt         time.Time `json:"created_at"`
}

type VstoryTimeline struct {
	ID               int32     `json:"id"`
	EnumID           string    `json:"enum_id"`
	TimelineTrack    string    `json:"timeline_track"`
	CeStoryType      string    `json:"ce_story_type"`
	OptionalInt      int32     `json:"optional_int"`
	StoryReward      string    `json:"story_reward"`
	BannerBackground string    `json:"banner_background"`
	Dialogue         string    `json:"dialogue"`
	Production       string    `json:"production"`
	CreatedAt        time.Time `json:"created_at"`
}

type WeaponLevelStat struct {
	ID            int32     `json:"id"`
	EnumID        string    `json:"enum_id"`
	LevelAtk      int32     `json:"level_atk"`
	LevelDef      int32     `json:"level_def"`
	LevelHp       int32     `json:"level_hp"`
	LevelProperty int32     `json:"level_property"`
	CreatedAt     time.Time `json:"created_at"`
}

type WorldMapLocal struct {
	ID        int32     `json:"id"`
	EnumID    string    `json:"enum_id"`
	Kr        string    `json:"kr"`
	En        string    `json:"en"`
	CreatedAt time.Time `json:"created_at"`
}
