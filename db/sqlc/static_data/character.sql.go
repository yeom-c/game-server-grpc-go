// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: character.sql

package db_static_data

import (
	"context"
)

const getCharacterByEnumId = `-- name: GetCharacterByEnumId :one
SELECT id, enum_id, character_root, ce_character_species, crew, ce_character_class, ce_character_property, mbti, hobby, partner, ce_character_grade, base_stat, level_stat, resource_list, skill_set, item_preference, signature_weapon, costume_bundle, second_name, library, profile, unit_size, basic, active, created_at FROM ` + "`" + `character` + "`" + ` WHERE enum_id = ?
`

func (q *Queries) GetCharacterByEnumId(ctx context.Context, enumID string) (Character, error) {
	row := q.db.QueryRowContext(ctx, getCharacterByEnumId, enumID)
	var i Character
	err := row.Scan(
		&i.ID,
		&i.EnumID,
		&i.CharacterRoot,
		&i.CeCharacterSpecies,
		&i.Crew,
		&i.CeCharacterClass,
		&i.CeCharacterProperty,
		&i.Mbti,
		&i.Hobby,
		&i.Partner,
		&i.CeCharacterGrade,
		&i.BaseStat,
		&i.LevelStat,
		&i.ResourceList,
		&i.SkillSet,
		&i.ItemPreference,
		&i.SignatureWeapon,
		&i.CostumeBundle,
		&i.SecondName,
		&i.Library,
		&i.Profile,
		&i.UnitSize,
		&i.Basic,
		&i.Active,
		&i.CreatedAt,
	)
	return i, err
}

const getCharacters = `-- name: GetCharacters :many
SELECT id, enum_id, character_root, ce_character_species, crew, ce_character_class, ce_character_property, mbti, hobby, partner, ce_character_grade, base_stat, level_stat, resource_list, skill_set, item_preference, signature_weapon, costume_bundle, second_name, library, profile, unit_size, basic, active, created_at FROM ` + "`" + `character` + "`" + `
`

func (q *Queries) GetCharacters(ctx context.Context) ([]Character, error) {
	rows, err := q.db.QueryContext(ctx, getCharacters)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Character{}
	for rows.Next() {
		var i Character
		if err := rows.Scan(
			&i.ID,
			&i.EnumID,
			&i.CharacterRoot,
			&i.CeCharacterSpecies,
			&i.Crew,
			&i.CeCharacterClass,
			&i.CeCharacterProperty,
			&i.Mbti,
			&i.Hobby,
			&i.Partner,
			&i.CeCharacterGrade,
			&i.BaseStat,
			&i.LevelStat,
			&i.ResourceList,
			&i.SkillSet,
			&i.ItemPreference,
			&i.SignatureWeapon,
			&i.CostumeBundle,
			&i.SecondName,
			&i.Library,
			&i.Profile,
			&i.UnitSize,
			&i.Basic,
			&i.Active,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
