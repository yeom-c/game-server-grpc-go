// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: shop.sql

package db_common

import (
	"context"
)

const getShopByTypeAndVisible = `-- name: GetShopByTypeAndVisible :one
SELECT id, type, visible, name, ` + "`" + `desc` + "`" + `, start_at, end_at FROM shop WHERE ` + "`" + `type` + "`" + ` = ? AND ` + "`" + `visible` + "`" + ` = ? ORDER BY id DESC LIMIT 1
`

type GetShopByTypeAndVisibleParams struct {
	ShopType    int32 `json:"shop_type"`
	ShopVisible int32 `json:"shop_visible"`
}

func (q *Queries) GetShopByTypeAndVisible(ctx context.Context, arg GetShopByTypeAndVisibleParams) (Shop, error) {
	row := q.db.QueryRowContext(ctx, getShopByTypeAndVisible, arg.ShopType, arg.ShopVisible)
	var i Shop
	err := row.Scan(
		&i.ID,
		&i.Type,
		&i.Visible,
		&i.Name,
		&i.Desc,
		&i.StartAt,
		&i.EndAt,
	)
	return i, err
}
